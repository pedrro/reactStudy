exports[`class HelloWorldList extends /* istanbul ignore next */_react.Component {
  constructor(props) {
    super(props);
    this.state = { greetings: ['Jim', 'Sally', 'Pedro'] };
    this.addGreeting = this.addGreeting.bind(this);
    this.removeGreeting = this.removeGreeting.bind(this);
  }

  renderGreetings() {/* istanbul ignore next */var _this = this;
    return this.state.greetings.map(function (name) /* istanbul ignore next */{return (
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_HelloWorld2.default, /* istanbul ignore next */{
          key: name,
          name: name,
          removeGreeting: /* istanbul ignore next */_this.removeGreeting, __source: { fileName: _jsxFileName, lineNumber: 18 }, __self: _this }));});


  }

  addGreeting(newName) {
    this.setState({ greetings: [...this.state.greetings, newName] });
  }

  removeGreeting(removeName) {
    var filteredGreetings = this.state.greetings.filter(function (name) {
      return name !== removeName;
    });
    this.setState({ greetings: filteredGreetings });
  }

  render() {
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'HelloWorldList', __source: { fileName: _jsxFileName, lineNumber: 39 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_AddGreeter2.default, /* istanbul ignore next */{ addGreeting: this.addGreeting, __source: { fileName: _jsxFileName, lineNumber: 40 }, __self: this }),
        this.renderGreetings()));


  }} renders and matches our snapshot 1`] = `
<div
  className="HelloWorldList">
  <div
    className="AddGreeter">
    <input
      onChange={[Function]}
      type="text"
      value="" />
      
    <button
      onClick={[Function]}>
      Add
    </button>
  </div>
  <div
    className="HelloWorld">
    Hello
     
    Jim
    !
    <br />
    <button
      className="frenchify"
      onClick={[Function]}>
      Frenchify!
    </button>
    <button
      onClick={[Function]}>
      move back!
    </button>
    <br />
    <button
      className="removeGreeting"
      onClick={[Function]}>
      Remove Me!
    </button>
  </div>
  <div
    className="HelloWorld">
    Hello
     
    Sally
    !
    <br />
    <button
      className="frenchify"
      onClick={[Function]}>
      Frenchify!
    </button>
    <button
      onClick={[Function]}>
      move back!
    </button>
    <br />
    <button
      className="removeGreeting"
      onClick={[Function]}>
      Remove Me!
    </button>
  </div>
  <div
    className="HelloWorld">
    Hello
     
    Pedro
    !
    <br />
    <button
      className="frenchify"
      onClick={[Function]}>
      Frenchify!
    </button>
    <button
      onClick={[Function]}>
      move back!
    </button>
    <br />
    <button
      className="removeGreeting"
      onClick={[Function]}>
      Remove Me!
    </button>
  </div>
</div>
`;
